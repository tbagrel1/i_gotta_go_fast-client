--- SOMMAIRE ---

1. A faire pour compléter le programme :

	1.1. Réussir à fermer le programme sans plantage OK
	1.2. Ajouter la prise en charge de <Enter> dans la fenêtre du temps OK
	1.3. Empêcher la saisie d'un mot en mode <Pause> OK
	1.4. Mettre un curseur actif par défaut dans les boîtes de dialogue OK
	1.5. Implémenter le calcul du ratio Temps/Mots OK
	1.6. Implémenter les boucles pour rejouer EN COURS
	1.7. Implémenter l'affichage du score à la fin de la partie PAS ENCORE

2. Autre idées pour plus tard :

	2.1. Programmer en Python 2.7 OK
	2.2. Gestion des scores PAS ENCORE
	2.3. Menu permettant le choix de la liste à afficher EN COURS
				    de la liste à saisir
	   Avec une checkbox permettant de définir les deux mêmes

--- DEVELOPPEMENT / DESCRIPTION ---

1.1. Réussir à fermer le programme sans plantage

Il faut fermer les 3 threads (compteur, temps et saisie), et identifier le
thread principal
Il faut pouvoir quitter le programme en cours de partie ou une fois la partie
terminée
A mettre en relation avec le 1.6. - 1.7. : fin du programme et affichage des
scores / boucle pour rejouer

1.2. Ajouter la prise en charge de <Enter> dans la fenêtre du temps

Simple : ajouter un protocole qui répond à l'événement <Enter> dans les
premières fenêtres du programme
Possibilité d'étendre ce système à d'autres raccourcis, pour mettre en pause,
quitter, recommencer ...

1.3. Empêcher la saisie d'un mot en mode <Pause>

Lors de la mise en pause, il faut capturer la saisie du joueur, la placer dans
une variable, remplacer l'inputbox par un label contenant la saisie en cours
du joueur
Lors de la reprise, il faut récupérer la saisie en cours, et remplacer le
label par une inputbox contenant la saisie, avec le curseur actif au bout de
la saisie

1.4. Mettre un curseur actif dans les boîtes de dialogue

Il faut trouver la ligne de commande permettant de rendre actif le curseur,
mais du coup, les raccourcis ne doivent pas être des lettres !
A mettre en relation avec le 1.2.

1.5. Implémenter le calcul du ration Temps/Mots

Simple : après la validation d'un mot juste, on récupére le nombre de mots
justes validés et le temps écoulé, pour calculer le ratio
Nécessaire d'intervenir sur les deux threads Temps et Compteur

1.6. Implémenter les boucles pour rejouer

A mettre en relation avec le 1.7. affichage des scores
Lorsque que la partie se termine, et après l'affichage des scores, une boîte
de dialogie doit apparaître et demander au joueur si il veut rejouer, ou si il
veut quitter le programme.
Si il quitte, affichage d'un message de fin / crédits

1.7. Implémenter l'affichage du score à la fin de la partie

Affichage simple d'une boîte de dialogue contenant toutes les infos de la
fenêtre compteur, avec (pourquoi pas) des commentaires (bravo/moyen ...) en
fonction de valeurs définies et ajustables en fonction du public

2.1. Programmer en Python 2.7

Sachant que ce programme pourrait faire l'objet de mon sujet d'ISN l'année
prochaine, il faut qu'il soit réalisé dans le language de programmation
utilisé par le lycée, c'est-à-dire Python 2.7
Cette adaptation fera l'objet de la version 2.x du programme, l'année
prochaine

2.2. Gestion des scores

Cette fonction sera plus ou moins complexe en fonction de l'objectif
recherché, mais voilà quelques propositions :
Recherche d'un fichier de highscore sur un serveur (local ou web)
Réalisation d'un fichier de score, avec nom, date ... local
A la fin de la partie, le joueur est invité à saisir son nom, si il souhaite
sauvegarder son score. Le score est stocké dans le fichier local, et si il
dépasse un des xx du score local, un message apparait
Pareil si il dépasse un highscore serveur.
Mise en place compliqué, qui requiert une gestion de fichiers complexes

2.3. Menu de la liste de mots.

Il faut implémenter un menu (fenêtre), qui s'ouvre par appui sur le bouton
<Option>, et qui permet de choisir la liste des mots/expressions à afficher
(ouvre une fenêtre de sélection des fichiers). Cette liste est copiée dans le
répertoire du programme. On choisit ensuite la liste de mots à saisir (dans le
cas d'utilisation du programme comme outil de conjugaison : aller (il) / il
va). Cette liste est également copiée
Une checkbox permet de choisir la même liste pour les deux (comme
actuellement), ce qui grise la seconde entrée
